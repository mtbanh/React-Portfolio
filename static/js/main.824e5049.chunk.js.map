{"version":3,"sources":["components/Header.js","components/About.js","components/Portfolio.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","name","style","color","fontFamily","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","address","email","Porfolio","portfolio","github","livesite","imgurl","description","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.824e5049.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n             {/* <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li> */}\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n               {/* <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li> */}\n               {/* <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li> */}\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">{resumeData.name}</h1>\n               <h3 style={{color:'#ea5455', fontFamily:'sans-serif '}}>Full Stack Web Developer . Problem Solver\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n   render() {\n      let resumeData = this.props.resumeData;\n      return (\n         <section id=\"about\">\n            <div className=\"row\">\n\n               <div className=\"three columns\">\n\n                  <img className=\"profile-pic\" src=\"images/profilepic.JPG\" alt=\"\" />\n\n               </div>\n\n               <div className=\"nine columns main-col\">\n\n                  <h2>About Me</h2>\n                  <p>\n                     {\n                        resumeData.aboutme\n                     }\n                  </p>\n\n                  <div className=\"row\">\n\n                     <div className=\"columns contact-details\">\n\n                        <h2>Contact Details</h2>\n                        <p className=\"address\">\n                           <span>{resumeData.name}</span>\n                           <br></br>\n                           <span>{resumeData.address}</span>\n                           <br></br>\n                           <span>{resumeData.email}</span>\n                           <br></br>\n                           <span> <a href=\"https://docs.google.com/document/d/1KAqYa_4fjjXm_Rk5CpDK68VE2UQrI1cJfDUHNsdCHVw/edit?usp=sharing\"\n                              target=\"_blank\">Click to see my resume</a></span>\n                        </p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </section>\n      );\n   }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Check Out Some of My Works.</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-thirds s-bgrid-thirds cf\">\n              {\n                resumeData.portfolio && resumeData.portfolio.map((item) => {\n                  return (\n                    <div className=\"columns portfolio-item\">\n                      <h2 id=\"projectName\">{item.name}</h2>\n                      <div id=\"github\"key={item.name}>\n                        <a href={item.url} target=\"_blank\"><i className={item.github}></i></a>\n                        <a href={item.livesite} target=\"_blank\">Project is Live!</a>\n                      </div>\n                      <div className=\"item-wrap\">\n\n                        <a href=\"#modal-01\">\n                          <img src={`${item.imgurl}`} className=\"item-img\" />\n                          <div className=\"overlay\">\n                            <div className=\"portfolio-item-meta\">\n                              <h5>{item.name}</h5>\n                              <p>{item.description}</p>\n                            </div>\n                          </div>\n                        </a>\n                      </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\r\n    \"imagebaseurl\":\"https://mtbanh.github.io/\",\r\n    \"name\": \"Mai Banh\",\r\n    \"role\": \"Full Stack Web Developer\",\r\n    \"socialLinks\":[\r\n        {\r\n          \"name\":\"linkedin\",\r\n          \"url\":\"https://www.linkedin.com/in/banhtmai/\",\r\n          \"className\":\"fa fa-linkedin\"\r\n        },\r\n        {\r\n          \"name\":\"github\",\r\n          \"url\":\"http://github.com/mtbanh\",\r\n          \"className\":\"fa fa-github\"\r\n        },\r\n \r\n    ], \r\n     \"aboutme\": \" currently completing a Full Stack Web Developer Bootcamp with UC Berkeley\",\r\n     \"resume\" : \"https://docs.google.com/document/d/1KAqYa_4fjjXm_Rk5CpDK68VE2UQrI1cJfDUHNsdCHVw/edit?usp=sharing\",\r\n     \"address\" : \"Bay Area San Francisco\",\r\n     \"email\" : \"banhtmai@gmail.com\",\r\n    \"portfolio\":[\r\n      {\r\n        \"name\":\"Clicky Game\",\r\n        \"description\":\"A memory game created with React\",\r\n        \"imgurl\":\"images/portfolio/Clicky-Game.gif\",\r\n        \"github\" : \"fa fa-github\",\r\n        \"url\" : \"https://github.com/mtbanh/Clicky-Game\",\r\n        \"livesite\" : \"https://mtbanh.github.io/Clicky-Game/\"\r\n      },\r\n      {\r\n        \"name\":\"Employee Tracker\",\r\n        \"description\":\"Utilizing React to create an employee directory that allow users to view, and sort their employee databse\",\r\n        \"imgurl\":\"images/portfolio/Employee-Directory.gif\",\r\n        \"github\" : \"fa fa-github\",\r\n        \"url\" : \"https://github.com/mtbanh/Employee-Directory\",\r\n        \"livesite\" : \"https://mtbanh.github.io/Employee-Directory/\"\r\n      },\r\n      {\r\n        \"name\":\"ProjectX\",\r\n        \"description\":\"Full Stack application created with Express, mySQL and Passport for user authentication\",  \r\n        \"imgurl\":\"images/portfolio/ProjectX.gif\",\r\n        \"github\" : \"fa fa-github\",\r\n        \"url\" : \"https://github.com/mtbanh/ProjectX\",\r\n        \"livesite\" : \"https://fast-meadow-38464.herokuapp.com/\"\r\n      },\r\n      {\r\n        \"name\":\"Employee Tracker\",\r\n        \"description\":\"Utilizing CLI and mySQL to allow user to add, view and edit their employee database\",\r\n        \"imgurl\":\"images/portfolio/Employee-Tracker.gif\",\r\n        \"github\" : \"fa fa-github\",\r\n        \"url\" : \"https://github.com/mtbanh/Employee-Tracker\",\r\n        // \"livesite\" : \"https://mtbanh.github.io/Employee-Directory/\"\r\n      },\r\n      {\r\n        \"name\":\"hangryFixed\",\r\n        \"description\":\"Utilizing Yelp API and Googmaps API, this application will randomly generate a restaurant to eat at base on user input\",\r\n        \"imgurl\":\"images/portfolio/hangryFixed.gif\",\r\n        \"github\" : \"fa fa-github\",\r\n        \"url\" : \"https://github.com/mtbanh/hangryFixed\",\r\n        \"livesite\" : \"https://idelmundo.github.io/hangryfixed/\"\r\n      },\r\n      {\r\n        \"name\":\"Weather Dashboard\",\r\n        \"description\":\"Utilizing openWeather API and local storage, this application allow user to search for the forecast of a specific city\",\r\n        \"imgurl\":\"images/portfolio/weather-dashboard.gif\",\r\n        \"github\" : \"fa fa-github\",\r\n        \"url\" : \"https://github.com/mtbanh/\",\r\n        \"livesite\" : \"https://mtbanh.github.io/weather-dashboard/\"\r\n      },\r\n    ]\r\n}\r\n  \r\n  export default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\n// import Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\n// import Testimonials from  './components/Testimonials';\n// import ContactMe from './components/ContactMe';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        {/* <Resume resumeData={resumeData}/> */}\n        <Portfolio resumeData={resumeData}/>\n        {/* <Testimonials resumeData={resumeData}/> */}\n        {/* <ContactMe resumeData={resumeData}/> */}\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}